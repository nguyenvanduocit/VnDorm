//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Enrollment_DSSModel", "RowRoomRoom", "RowRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Enrollment_DSS.Data.Entities.RowRoom), "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Enrollment_DSS.Data.Entities.Room), true)]
[assembly: EdmRelationshipAttribute("Enrollment_DSSModel", "FK_Account_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Enrollment_DSS.Data.Entities.Role), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Enrollment_DSS.Data.Entities.Account), true)]
[assembly: EdmRelationshipAttribute("Enrollment_DSSModel", "RoomStudent", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Enrollment_DSS.Data.Entities.Room), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Enrollment_DSS.Data.Entities.Student), true)]
[assembly: EdmRelationshipAttribute("Enrollment_DSSModel", "FacultyStudent", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Enrollment_DSS.Data.Entities.Faculty), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Enrollment_DSS.Data.Entities.Student), true)]

#endregion

namespace Enrollment_DSS.Data.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Enrollment_DSSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Enrollment_DSSEntities object using the connection string found in the 'Enrollment_DSSEntities' section of the application configuration file.
        /// </summary>
        public Enrollment_DSSEntities() : base("name=Enrollment_DSSEntities", "Enrollment_DSSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Enrollment_DSSEntities object.
        /// </summary>
        public Enrollment_DSSEntities(string connectionString) : base(connectionString, "Enrollment_DSSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Enrollment_DSSEntities object.
        /// </summary>
        public Enrollment_DSSEntities(EntityConnection connection) : base(connection, "Enrollment_DSSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Faculty> Faculties
        {
            get
            {
                if ((_Faculties == null))
                {
                    _Faculties = base.CreateObjectSet<Faculty>("Faculties");
                }
                return _Faculties;
            }
        }
        private ObjectSet<Faculty> _Faculties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImageStore> ImageStores
        {
            get
            {
                if ((_ImageStores == null))
                {
                    _ImageStores = base.CreateObjectSet<ImageStore>("ImageStores");
                }
                return _ImageStores;
            }
        }
        private ObjectSet<ImageStore> _ImageStores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RowRoom> RowRooms
        {
            get
            {
                if ((_RowRooms == null))
                {
                    _RowRooms = base.CreateObjectSet<RowRoom>("RowRooms");
                }
                return _RowRooms;
            }
        }
        private ObjectSet<RowRoom> _RowRooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NhanVien> NhanViens
        {
            get
            {
                if ((_NhanViens == null))
                {
                    _NhanViens = base.CreateObjectSet<NhanVien>("NhanViens");
                }
                return _NhanViens;
            }
        }
        private ObjectSet<NhanVien> _NhanViens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Faculties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFaculties(Faculty faculty)
        {
            base.AddObject("Faculties", faculty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImageStores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImageStores(ImageStore imageStore)
        {
            base.AddObject("ImageStores", imageStore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RowRooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRowRooms(RowRoom rowRoom)
        {
            base.AddObject("RowRooms", rowRoom);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NhanViens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNhanViens(NhanVien nhanVien)
        {
            base.AddObject("NhanViens", nhanVien);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static Account CreateAccount(global::System.String userName)
        {
            Account account = new Account();
            account.UserName = userName;
            return account;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Enrollment_DSSModel", "FK_Account_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Enrollment_DSSModel.FK_Account_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Enrollment_DSSModel.FK_Account_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Enrollment_DSSModel.FK_Account_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("Enrollment_DSSModel.FK_Account_Role", "Role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="Faculty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Faculty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Faculty object.
        /// </summary>
        /// <param name="facultyID">Initial value of the FacultyID property.</param>
        /// <param name="facultyName">Initial value of the FacultyName property.</param>
        public static Faculty CreateFaculty(global::System.String facultyID, global::System.String facultyName)
        {
            Faculty faculty = new Faculty();
            faculty.FacultyID = facultyID;
            faculty.FacultyName = facultyName;
            return faculty;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacultyID
        {
            get
            {
                return _FacultyID;
            }
            set
            {
                if (_FacultyID != value)
                {
                    OnFacultyIDChanging(value);
                    ReportPropertyChanging("FacultyID");
                    _FacultyID = StructuralObject.SetValidValue(value, false, "FacultyID");
                    ReportPropertyChanged("FacultyID");
                    OnFacultyIDChanged();
                }
            }
        }
        private global::System.String _FacultyID;
        partial void OnFacultyIDChanging(global::System.String value);
        partial void OnFacultyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacultyName
        {
            get
            {
                return _FacultyName;
            }
            set
            {
                OnFacultyNameChanging(value);
                ReportPropertyChanging("FacultyName");
                _FacultyName = StructuralObject.SetValidValue(value, false, "FacultyName");
                ReportPropertyChanged("FacultyName");
                OnFacultyNameChanged();
            }
        }
        private global::System.String _FacultyName;
        partial void OnFacultyNameChanging(global::System.String value);
        partial void OnFacultyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Enrollment_DSSModel", "FacultyStudent", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("Enrollment_DSSModel.FacultyStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("Enrollment_DSSModel.FacultyStudent", "Student", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="ImageStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImageStore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImageStore object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ImageStore CreateImageStore(global::System.Int32 id)
        {
            ImageStore imageStore = new ImageStore();
            imageStore.ID = id;
            return imageStore;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalPath
        {
            get
            {
                return _OriginalPath;
            }
            set
            {
                OnOriginalPathChanging(value);
                ReportPropertyChanging("OriginalPath");
                _OriginalPath = StructuralObject.SetValidValue(value, true, "OriginalPath");
                ReportPropertyChanged("OriginalPath");
                OnOriginalPathChanged();
            }
        }
        private global::System.String _OriginalPath;
        partial void OnOriginalPathChanging(global::System.String value);
        partial void OnOriginalPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageData
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageData);
            }
            set
            {
                OnImageDataChanging(value);
                ReportPropertyChanging("ImageData");
                _ImageData = StructuralObject.SetValidValue(value, true, "ImageData");
                ReportPropertyChanged("ImageData");
                OnImageDataChanged();
            }
        }
        private global::System.Byte[] _ImageData;
        partial void OnImageDataChanging(global::System.Byte[] value);
        partial void OnImageDataChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.String userName)
        {
            Log log = new Log();
            log.ID = id;
            log.UserName = userName;
            return log;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, "Time");
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _Time;
        partial void OnTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoiDung
        {
            get
            {
                return _NoiDung;
            }
            set
            {
                OnNoiDungChanging(value);
                ReportPropertyChanging("NoiDung");
                _NoiDung = StructuralObject.SetValidValue(value, true, "NoiDung");
                ReportPropertyChanged("NoiDung");
                OnNoiDungChanged();
            }
        }
        private global::System.String _NoiDung;
        partial void OnNoiDungChanging(global::System.String value);
        partial void OnNoiDungChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhanHe
        {
            get
            {
                return _PhanHe;
            }
            set
            {
                OnPhanHeChanging(value);
                ReportPropertyChanging("PhanHe");
                _PhanHe = StructuralObject.SetValidValue(value, true, "PhanHe");
                ReportPropertyChanged("PhanHe");
                OnPhanHeChanged();
            }
        }
        private global::System.String _PhanHe;
        partial void OnPhanHeChanging(global::System.String value);
        partial void OnPhanHeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="NhanVien")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NhanVien : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NhanVien object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static NhanVien CreateNhanVien(global::System.Int32 id)
        {
            NhanVien nhanVien = new NhanVien();
            nhanVien.ID = id;
            return nhanVien;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HoTen
        {
            get
            {
                return _HoTen;
            }
            set
            {
                OnHoTenChanging(value);
                ReportPropertyChanging("HoTen");
                _HoTen = StructuralObject.SetValidValue(value, true, "HoTen");
                ReportPropertyChanged("HoTen");
                OnHoTenChanged();
            }
        }
        private global::System.String _HoTen;
        partial void OnHoTenChanging(global::System.String value);
        partial void OnHoTenChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static Role CreateRole(global::System.Int32 roleID)
        {
            Role role = new Role();
            role.RoleID = roleID;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Enrollment_DSSModel", "FK_Account_Role", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("Enrollment_DSSModel.FK_Account_Role", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("Enrollment_DSSModel.FK_Account_Role", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Room CreateRoom(global::System.String roomID, global::System.Boolean status)
        {
            Room room = new Room();
            room.RoomID = roomID;
            room.Status = status;
            return room;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                if (_RoomID != value)
                {
                    OnRoomIDChanging(value);
                    ReportPropertyChanging("RoomID");
                    _RoomID = StructuralObject.SetValidValue(value, false, "RoomID");
                    ReportPropertyChanged("RoomID");
                    OnRoomIDChanged();
                }
            }
        }
        private global::System.String _RoomID;
        partial void OnRoomIDChanging(global::System.String value);
        partial void OnRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RowID
        {
            get
            {
                return _RowID;
            }
            set
            {
                OnRowIDChanging(value);
                ReportPropertyChanging("RowID");
                _RowID = StructuralObject.SetValidValue(value, true, "RowID");
                ReportPropertyChanged("RowID");
                OnRowIDChanged();
            }
        }
        private global::System.String _RowID;
        partial void OnRowIDChanging(global::System.String value);
        partial void OnRowIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxStudent
        {
            get
            {
                return _MaxStudent;
            }
            set
            {
                OnMaxStudentChanging(value);
                ReportPropertyChanging("MaxStudent");
                _MaxStudent = StructuralObject.SetValidValue(value, "MaxStudent");
                ReportPropertyChanged("MaxStudent");
                OnMaxStudentChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxStudent;
        partial void OnMaxStudentChanging(Nullable<global::System.Int32> value);
        partial void OnMaxStudentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Enrollment_DSSModel", "RowRoomRoom", "RowRoom")]
        public RowRoom RowRoom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RowRoom>("Enrollment_DSSModel.RowRoomRoom", "RowRoom").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RowRoom>("Enrollment_DSSModel.RowRoomRoom", "RowRoom").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RowRoom> RowRoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RowRoom>("Enrollment_DSSModel.RowRoomRoom", "RowRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RowRoom>("Enrollment_DSSModel.RowRoomRoom", "RowRoom", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Enrollment_DSSModel", "RoomStudent", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("Enrollment_DSSModel.RoomStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("Enrollment_DSSModel.RoomStudent", "Student", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="RowRoom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RowRoom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RowRoom object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static RowRoom CreateRowRoom(global::System.String id)
        {
            RowRoom rowRoom = new RowRoom();
            rowRoom.ID = id;
            return rowRoom;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Block
        {
            get
            {
                return _Block;
            }
            set
            {
                OnBlockChanging(value);
                ReportPropertyChanging("Block");
                _Block = StructuralObject.SetValidValue(value, true, "Block");
                ReportPropertyChanged("Block");
                OnBlockChanged();
            }
        }
        private global::System.String _Block;
        partial void OnBlockChanging(global::System.String value);
        partial void OnBlockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Floor
        {
            get
            {
                return _Floor;
            }
            set
            {
                OnFloorChanging(value);
                ReportPropertyChanging("Floor");
                _Floor = StructuralObject.SetValidValue(value, "Floor");
                ReportPropertyChanged("Floor");
                OnFloorChanged();
            }
        }
        private Nullable<global::System.Int32> _Floor;
        partial void OnFloorChanging(Nullable<global::System.Int32> value);
        partial void OnFloorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Enrollment_DSSModel", "RowRoomRoom", "Room")]
        public EntityCollection<Room> Rooms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Room>("Enrollment_DSSModel.RowRoomRoom", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Room>("Enrollment_DSSModel.RowRoomRoom", "Room", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Enrollment_DSSModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="facultyID">Initial value of the FacultyID property.</param>
        /// <param name="identityNo">Initial value of the IdentityNo property.</param>
        /// <param name="validityDate">Initial value of the ValidityDate property.</param>
        /// <param name="province">Initial value of the Province property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        public static Student CreateStudent(global::System.String studentID, global::System.String facultyID, global::System.String identityNo, global::System.DateTime validityDate, global::System.String province, global::System.String roomID)
        {
            Student student = new Student();
            student.StudentID = studentID;
            student.FacultyID = facultyID;
            student.IdentityNo = identityNo;
            student.ValidityDate = validityDate;
            student.Province = province;
            student.RoomID = roomID;
            return student;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value, false, "StudentID");
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.String _StudentID;
        partial void OnStudentIDChanging(global::System.String value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true, "Sex");
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDay
        {
            get
            {
                return _BirthDay;
            }
            set
            {
                OnBirthDayChanging(value);
                ReportPropertyChanging("BirthDay");
                _BirthDay = StructuralObject.SetValidValue(value, "BirthDay");
                ReportPropertyChanged("BirthDay");
                OnBirthDayChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDay;
        partial void OnBirthDayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, true, "ClassID");
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ethnic
        {
            get
            {
                return _Ethnic;
            }
            set
            {
                OnEthnicChanging(value);
                ReportPropertyChanging("Ethnic");
                _Ethnic = StructuralObject.SetValidValue(value, true, "Ethnic");
                ReportPropertyChanged("Ethnic");
                OnEthnicChanged();
            }
        }
        private global::System.String _Ethnic;
        partial void OnEthnicChanging(global::System.String value);
        partial void OnEthnicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Religion
        {
            get
            {
                return _Religion;
            }
            set
            {
                OnReligionChanging(value);
                ReportPropertyChanging("Religion");
                _Religion = StructuralObject.SetValidValue(value, true, "Religion");
                ReportPropertyChanged("Religion");
                OnReligionChanged();
            }
        }
        private global::System.String _Religion;
        partial void OnReligionChanging(global::System.String value);
        partial void OnReligionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IntoSchoolYear
        {
            get
            {
                return _IntoSchoolYear;
            }
            set
            {
                OnIntoSchoolYearChanging(value);
                ReportPropertyChanging("IntoSchoolYear");
                _IntoSchoolYear = StructuralObject.SetValidValue(value, true, "IntoSchoolYear");
                ReportPropertyChanged("IntoSchoolYear");
                OnIntoSchoolYearChanged();
            }
        }
        private global::System.String _IntoSchoolYear;
        partial void OnIntoSchoolYearChanging(global::System.String value);
        partial void OnIntoSchoolYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FacultyID
        {
            get
            {
                return _FacultyID;
            }
            set
            {
                OnFacultyIDChanging(value);
                ReportPropertyChanging("FacultyID");
                _FacultyID = StructuralObject.SetValidValue(value, false, "FacultyID");
                ReportPropertyChanged("FacultyID");
                OnFacultyIDChanged();
            }
        }
        private global::System.String _FacultyID;
        partial void OnFacultyIDChanging(global::System.String value);
        partial void OnFacultyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IdentityNo
        {
            get
            {
                return _IdentityNo;
            }
            set
            {
                OnIdentityNoChanging(value);
                ReportPropertyChanging("IdentityNo");
                _IdentityNo = StructuralObject.SetValidValue(value, false, "IdentityNo");
                ReportPropertyChanged("IdentityNo");
                OnIdentityNoChanged();
            }
        }
        private global::System.String _IdentityNo;
        partial void OnIdentityNoChanging(global::System.String value);
        partial void OnIdentityNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidityDate
        {
            get
            {
                return _ValidityDate;
            }
            set
            {
                OnValidityDateChanging(value);
                ReportPropertyChanging("ValidityDate");
                _ValidityDate = StructuralObject.SetValidValue(value, "ValidityDate");
                ReportPropertyChanged("ValidityDate");
                OnValidityDateChanged();
            }
        }
        private global::System.DateTime _ValidityDate;
        partial void OnValidityDateChanging(global::System.DateTime value);
        partial void OnValidityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, false, "Province");
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value, false, "RoomID");
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.String _RoomID;
        partial void OnRoomIDChanging(global::System.String value);
        partial void OnRoomIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Enrollment_DSSModel", "RoomStudent", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("Enrollment_DSSModel.RoomStudent", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("Enrollment_DSSModel.RoomStudent", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("Enrollment_DSSModel.RoomStudent", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("Enrollment_DSSModel.RoomStudent", "Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Enrollment_DSSModel", "FacultyStudent", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("Enrollment_DSSModel.FacultyStudent", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("Enrollment_DSSModel.FacultyStudent", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("Enrollment_DSSModel.FacultyStudent", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("Enrollment_DSSModel.FacultyStudent", "Faculty", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
